const URLShortenerModel = require('./models/mongoClient');

class URLShortener {
  // constructor(url) {
  //   this.url = url;
  // }

  static getShortCode() {
    return URLShortenerModel
      .find() // We search without criteria
      .sort({ shortCode: -1 }) // We sort by shortCode DESCENDING
      .limit(1) // We only return the FIRST
      .select({ _id: 0, shortCode: 1 }) // We only return the shortCode field
      .then(docs =>
        // If a document is found, we return it's shortCode plus one,
        // otherwise, we return 0, as it means there are no documents,
        // and this is the first
        (docs.length === 1 ? docs[0].shortCode + 1 : 0));
  }


  static insertNew(url) {
    // We get a new code from getShortCode first
    // It returns a promise as it's an asynchronous action
    return this.getShortCode().then((newCode) => {
      // We create a new UrlEntry using the mongoose model
      const newUrl = new URLShortenerModel({ original: url, shortCode: newCode });
      // We return the promise generated by save()
      return newUrl.save();
    });
  }
}


module.exports = URLShortener;
