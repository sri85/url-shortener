/** ****************************************************
 * PLEASE DO NOT EDIT THIS FILE
 * the verification process may break
 * ************************************************** */

const express = require('express');
const boom = require('express-boom');
const urlvalidator = require('./api/urlUtils');
const urlShortener = require('./api/urlShortener');

const app = express();
app.use(boom());
const port = process.env.PORT || 8000;

app.get('/api/new/*', (request, response) => {
  const inputUrl = decodeURIComponent(request.params[0]);
  if (!(urlvalidator.isValid(inputUrl))) {
    response.boom.badRequest('URL is not valid').end();
  }
  (urlShortener.isDuplicate(inputUrl)).then((exists) => {
    if (!exists) {
      return urlShortener.insertNew(inputUrl).then((insertedDocument) => {
        const responseBody = {
          shortUrl: urlvalidator.createUrl(request, insertedDocument.shortCode),
          originalUrl: inputUrl,
        };
        response.json(responseBody).end();
      }).catch((err) => {
        console.log(err);
      });
    }
    response.boom.conflict(urlvalidator.createUrl(request, exists)).end();
  });
});

app.get('/:shortcode', (request, response) => {
  const urlShortcode = parseInt(request.params.shortcode);
  if (urlvalidator.isNumber(urlShortcode)) {
    return urlShortener.getUrl(urlShortcode).then((url) => {
      if (!url) {
        response.boom.notFound('URL not found');
      } else {
        response.redirect(url.original);
      }
    });
  }
});

app.listen(port, (err) => {
  if (err) {
    throw err;
  }
  console.log(`URL shortener service is running on ${port} `);
});

module.exports = app;
